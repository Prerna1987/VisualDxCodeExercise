// Generated by Dagger (https://dagger.dev).
package com.visualdx.codechallenge.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyCurrencyModelFactory_Factory implements Factory<MyCurrencyModelFactory> {
  private final Provider<CurrencyRepository> repositoryProvider;

  public MyCurrencyModelFactory_Factory(Provider<CurrencyRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public MyCurrencyModelFactory get() {
    return newInstance(repositoryProvider.get());
  }

  public static MyCurrencyModelFactory_Factory create(
      Provider<CurrencyRepository> repositoryProvider) {
    return new MyCurrencyModelFactory_Factory(repositoryProvider);
  }

  public static MyCurrencyModelFactory newInstance(CurrencyRepository repository) {
    return new MyCurrencyModelFactory(repository);
  }
}
